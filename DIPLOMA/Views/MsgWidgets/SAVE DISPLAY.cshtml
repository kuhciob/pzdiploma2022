
@model DIPLOMA.Models.ViewModels.DisplayMsgViewModel
@using System.Linq

@{
    Layout = "~/Views/Shared/_DisplayDonateLayout.cshtml";

    bool randomContent = Model.MWidget.RandomContent;
    int contentIndx = 0;
    Random random = new Random();

}
<input type="color" id="favcolor" name="favcolor" value="#ff0000">
<br>
<br>
<button type="button" onclick="testbutton()"> TEST</button>
<div>
    <dl class="row" id="donate" style="display:none; text-align:center; width:1000px; ">
        <dd class="col-sm-10">
            <h2 id="DonatorName"></h2>
        </dd>
        <dd class="col-sm-10">
            <img id="Animation" src="" alt="" class="img-fluid" height="300">
        </dd>
        <dd class="col-sm-10">
            <h2 id="Message"></h2>
        </dd>

    </dl>
</div>
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script>

    function testbutton() {

        let imgSrc = "";



        document.getElementById("DonatorName").innerHTML = "IVAN DONATOr - 100";

        document.getElementById("Message").innerHTML = "TEXT MESSSSA SLAKDLASKDLKASLDKALSD" +
            "TETETTETETETTSTSTSTTTT STSTSTTSTSTSSSSSSSSSSSS SSSSSSSTTST STDTDSTSDTT DTS T";
        document.getElementById("Animation").src = imgSrc
        document.getElementById("donate").style.display = 'block';
    }
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/donates")
        .withAutomaticReconnect()
        .build();

    // Get message from hub
    hubConnection.on('ReceiveMessage', function (donate) {

        console.log(donate);
        document.getElementById("DonatorName").innerHTML = donate.donatorName + ' - ' + donate.amount;
        //document.getElementById("Amount").innerHTML = donate.amount;
        document.getElementById("Message").innerHTML = donate.message;


        let imgSrc = "@Html.Raw(Model.Content.ElementAt(randomContent ?
            random.Next(0, Model.Content.Count) :
            (contentIndx - ((int)(contentIndx++ / Model.Content.Count) * Model.Content.Count))).
            AnimSrc)"

            document.getElementById("Animation").src = imgSrc
            document.getElementById("donate").style.display = 'block';

            setTimeout(function () {
                document.getElementById("donate").style.display = 'none';
            }, 5000);

        });
    hubConnection.start();

    var lockResolver;
    if (navigator && navigator.locks && navigator.locks.request) {
        const promise = new Promise((res) => {
            lockResolver = res;
        });

        navigator.locks.request('unique_lock_name', { mode: "shared" }, () => {
            return promise;
        });
    }

</script>