@model DIPLOMA.Models.DonateMsg

@{
    ViewData["Title"] = "Show";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Show</h1>

<div>
    <h4>DonateMsg</h4>
    <hr />
    <dl class="row" id="donate" style="display:none">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Amount)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Amount)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DonatorName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DonatorName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Message)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Message)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedDate)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.CreatedDate)
        </dd>
        
        <dd class="col-sm-10">
            @Html.HiddenFor(model => model.User.Id)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>


<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script>
    const hubConnection = new signalR.HubConnectionBuilder()
        .withUrl("/donates/@Model.User")
        .build();

    // получение сообщения от сервера
    hubConnection.on('ReceiveMessage', function (message) {

        document.getElementById("DonatorName").value = donate.donatorName;
        document.getElementById("Amount").value = donate.amount;
        document.getElementById("Message").value = donate.message;
            document.getElementById("donate").style.display = 'block';

            setTimeout(function () {
                document.getElementById("donate").style.display = 'none';
            }, 5000);

    });
    hubConnection.start();
</script>