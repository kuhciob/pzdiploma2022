@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{

    var AppUser = (ApplicationUser)UserManager.GetUserAsync(User).Result;

}
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item px-1">
            @*<a class="nav-link text-dark btn btn-sm btn-outline-secondary" 
               asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @AppUser.NickName!</a>*@
            <a class="nav-link text-dark btn btn-sm btn-outline-secondary"
               asp-area="" asp-controller="Panel" asp-action="Index" title="Manage">Hello @AppUser.NickName!</a>
        </li>
        <li class="nav-item px-1">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark btn btn-sm btn-outline-danger">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item px-1">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item px-1">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
